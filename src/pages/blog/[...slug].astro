---
import { getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import BlogCard from '../../components/BlogCard.astro';
import client from '../../../tina/__generated__/client';
import AdminBlogPost from '../../../tina/pages/AdminBlogPost';

export async function getStaticPaths() {
  const posts = await getCollection('blog');

  return posts?.map((post) => ({
    params: { slug: post?.id },
    props: {
      post,
      getTinaProps: async () =>
        client.queries.blog({
          relativePath: post?.data?.tinaInfo.relativePath,
        }),
    },
  }));
}

const { slug } = Astro.params;

const { getTinaProps } = Astro.props;
const tinaProps = await getTinaProps();
---

<BlogPost {...tinaProps}>
  <AdminBlogPost {...tinaProps} client:tina />

  <section class="mt-12 mb-6">
    <h2 class="text-2xl font-bold mb-4">Recent Posts</h2>
    <div class="grid sm:grid-cols-2 md:grid-cols-3 gap-4">
      {
        (await getCollection('blog'))
          .filter((p) => p?.id !== slug)
          .slice(0, 3)
          .map((p) => <BlogCard post={p} />)
      }
    </div>
  </section>
</BlogPost>
